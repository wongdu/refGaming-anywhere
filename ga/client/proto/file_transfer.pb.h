// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: file_transfer.proto

#ifndef PROTOBUF_file_5ftransfer_2eproto__INCLUDED
#define PROTOBUF_file_5ftransfer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
namespace proto {
class CreateDirectoryRequest;
class CreateDirectoryRequestDefaultTypeInternal;
extern CreateDirectoryRequestDefaultTypeInternal _CreateDirectoryRequest_default_instance_;
class DownloadRequest;
class DownloadRequestDefaultTypeInternal;
extern DownloadRequestDefaultTypeInternal _DownloadRequest_default_instance_;
class DriveList;
class DriveListDefaultTypeInternal;
extern DriveListDefaultTypeInternal _DriveList_default_instance_;
class DriveListRequest;
class DriveListRequestDefaultTypeInternal;
extern DriveListRequestDefaultTypeInternal _DriveListRequest_default_instance_;
class DriveList_Item;
class DriveList_ItemDefaultTypeInternal;
extern DriveList_ItemDefaultTypeInternal _DriveList_Item_default_instance_;
class FileList;
class FileListDefaultTypeInternal;
extern FileListDefaultTypeInternal _FileList_default_instance_;
class FileListRequest;
class FileListRequestDefaultTypeInternal;
extern FileListRequestDefaultTypeInternal _FileListRequest_default_instance_;
class FileList_Item;
class FileList_ItemDefaultTypeInternal;
extern FileList_ItemDefaultTypeInternal _FileList_Item_default_instance_;
class FilePacket;
class FilePacketDefaultTypeInternal;
extern FilePacketDefaultTypeInternal _FilePacket_default_instance_;
class FilePacketRequest;
class FilePacketRequestDefaultTypeInternal;
extern FilePacketRequestDefaultTypeInternal _FilePacketRequest_default_instance_;
class FileReply;
class FileReplyDefaultTypeInternal;
extern FileReplyDefaultTypeInternal _FileReply_default_instance_;
class FileRequest;
class FileRequestDefaultTypeInternal;
extern FileRequestDefaultTypeInternal _FileRequest_default_instance_;
class RemoveRequest;
class RemoveRequestDefaultTypeInternal;
extern RemoveRequestDefaultTypeInternal _RemoveRequest_default_instance_;
class RenameRequest;
class RenameRequestDefaultTypeInternal;
extern RenameRequestDefaultTypeInternal _RenameRequest_default_instance_;
class UploadRequest;
class UploadRequestDefaultTypeInternal;
extern UploadRequestDefaultTypeInternal _UploadRequest_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_file_5ftransfer_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_file_5ftransfer_2eproto

enum DriveList_Item_Type {
  DriveList_Item_Type_TYPE_UNKNOWN = 0,
  DriveList_Item_Type_TYPE_CDROM = 1,
  DriveList_Item_Type_TYPE_REMOVABLE = 2,
  DriveList_Item_Type_TYPE_FIXED = 3,
  DriveList_Item_Type_TYPE_REMOTE = 4,
  DriveList_Item_Type_TYPE_RAM = 5,
  DriveList_Item_Type_TYPE_HOME_FOLDER = 6,
  DriveList_Item_Type_TYPE_DESKTOP_FOLDER = 7,
  DriveList_Item_Type_TYPE_ROOT_DIRECTORY = 8,
  DriveList_Item_Type_DriveList_Item_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DriveList_Item_Type_DriveList_Item_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DriveList_Item_Type_IsValid(int value);
const DriveList_Item_Type DriveList_Item_Type_Type_MIN = DriveList_Item_Type_TYPE_UNKNOWN;
const DriveList_Item_Type DriveList_Item_Type_Type_MAX = DriveList_Item_Type_TYPE_ROOT_DIRECTORY;
const int DriveList_Item_Type_Type_ARRAYSIZE = DriveList_Item_Type_Type_MAX + 1;

enum FilePacketRequest_Flags {
  FilePacketRequest_Flags_NO_FLAGS = 0,
  FilePacketRequest_Flags_CANCEL = 1,
  FilePacketRequest_Flags_FilePacketRequest_Flags_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FilePacketRequest_Flags_FilePacketRequest_Flags_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FilePacketRequest_Flags_IsValid(int value);
const FilePacketRequest_Flags FilePacketRequest_Flags_Flags_MIN = FilePacketRequest_Flags_NO_FLAGS;
const FilePacketRequest_Flags FilePacketRequest_Flags_Flags_MAX = FilePacketRequest_Flags_CANCEL;
const int FilePacketRequest_Flags_Flags_ARRAYSIZE = FilePacketRequest_Flags_Flags_MAX + 1;

enum FilePacket_Flags {
  FilePacket_Flags_NO_FLAGS = 0,
  FilePacket_Flags_FIRST_PACKET = 1,
  FilePacket_Flags_LAST_PACKET = 2,
  FilePacket_Flags_FilePacket_Flags_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FilePacket_Flags_FilePacket_Flags_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FilePacket_Flags_IsValid(int value);
const FilePacket_Flags FilePacket_Flags_Flags_MIN = FilePacket_Flags_NO_FLAGS;
const FilePacket_Flags FilePacket_Flags_Flags_MAX = FilePacket_Flags_LAST_PACKET;
const int FilePacket_Flags_Flags_ARRAYSIZE = FilePacket_Flags_Flags_MAX + 1;

enum FileError {
  FILE_ERROR_UNKNOWN = 0,
  FILE_ERROR_SUCCESS = 1,
  FILE_ERROR_NO_LOGGED_ON_USER = 2,
  FILE_ERROR_INVALID_REQUEST = 3,
  FILE_ERROR_INVALID_PATH_NAME = 4,
  FILE_ERROR_PATH_NOT_FOUND = 5,
  FILE_ERROR_PATH_ALREADY_EXISTS = 6,
  FILE_ERROR_NO_DRIVES_FOUND = 7,
  FILE_ERROR_DISK_FULL = 8,
  FILE_ERROR_ACCESS_DENIED = 9,
  FILE_ERROR_FILE_OPEN_ERROR = 10,
  FILE_ERROR_FILE_CREATE_ERROR = 11,
  FILE_ERROR_FILE_WRITE_ERROR = 12,
  FILE_ERROR_FILE_READ_ERROR = 13,
  FILE_ERROR_DISK_NOT_READY = 14,
  FileError_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FileError_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FileError_IsValid(int value);
const FileError FileError_MIN = FILE_ERROR_UNKNOWN;
const FileError FileError_MAX = FILE_ERROR_DISK_NOT_READY;
const int FileError_ARRAYSIZE = FileError_MAX + 1;

// ===================================================================

class DriveList_Item : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.DriveList.Item) */ {
 public:
  DriveList_Item();
  virtual ~DriveList_Item();

  DriveList_Item(const DriveList_Item& from);

  inline DriveList_Item& operator=(const DriveList_Item& from) {
    CopyFrom(from);
    return *this;
  }

  static const DriveList_Item& default_instance();

  static inline const DriveList_Item* internal_default_instance() {
    return reinterpret_cast<const DriveList_Item*>(
               &_DriveList_Item_default_instance_);
  }

  void Swap(DriveList_Item* other);

  // implements Message ----------------------------------------------

  inline DriveList_Item* New() const PROTOBUF_FINAL { return New(NULL); }

  DriveList_Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DriveList_Item& from);
  void MergeFrom(const DriveList_Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DriveList_Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DriveList_Item_Type Type;
  static const Type TYPE_UNKNOWN =
    DriveList_Item_Type_TYPE_UNKNOWN;
  static const Type TYPE_CDROM =
    DriveList_Item_Type_TYPE_CDROM;
  static const Type TYPE_REMOVABLE =
    DriveList_Item_Type_TYPE_REMOVABLE;
  static const Type TYPE_FIXED =
    DriveList_Item_Type_TYPE_FIXED;
  static const Type TYPE_REMOTE =
    DriveList_Item_Type_TYPE_REMOTE;
  static const Type TYPE_RAM =
    DriveList_Item_Type_TYPE_RAM;
  static const Type TYPE_HOME_FOLDER =
    DriveList_Item_Type_TYPE_HOME_FOLDER;
  static const Type TYPE_DESKTOP_FOLDER =
    DriveList_Item_Type_TYPE_DESKTOP_FOLDER;
  static const Type TYPE_ROOT_DIRECTORY =
    DriveList_Item_Type_TYPE_ROOT_DIRECTORY;
  static inline bool Type_IsValid(int value) {
    return DriveList_Item_Type_IsValid(value);
  }
  static const Type Type_MIN =
    DriveList_Item_Type_Type_MIN;
  static const Type Type_MAX =
    DriveList_Item_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    DriveList_Item_Type_Type_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // string path = 2;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int64 total_space = 4;
  void clear_total_space();
  static const int kTotalSpaceFieldNumber = 4;
  ::google::protobuf::int64 total_space() const;
  void set_total_space(::google::protobuf::int64 value);

  // int64 free_space = 5;
  void clear_free_space();
  static const int kFreeSpaceFieldNumber = 5;
  ::google::protobuf::int64 free_space() const;
  void set_free_space(::google::protobuf::int64 value);

  // .proto.DriveList.Item.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::proto::DriveList_Item_Type type() const;
  void set_type(::proto::DriveList_Item_Type value);

  // @@protoc_insertion_point(class_scope:proto.DriveList.Item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 total_space_;
  ::google::protobuf::int64 free_space_;
  int type_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DriveList : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.DriveList) */ {
 public:
  DriveList();
  virtual ~DriveList();

  DriveList(const DriveList& from);

  inline DriveList& operator=(const DriveList& from) {
    CopyFrom(from);
    return *this;
  }

  static const DriveList& default_instance();

  static inline const DriveList* internal_default_instance() {
    return reinterpret_cast<const DriveList*>(
               &_DriveList_default_instance_);
  }

  void Swap(DriveList* other);

  // implements Message ----------------------------------------------

  inline DriveList* New() const PROTOBUF_FINAL { return New(NULL); }

  DriveList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DriveList& from);
  void MergeFrom(const DriveList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DriveList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DriveList_Item Item;

  // accessors -------------------------------------------------------

  // repeated .proto.DriveList.Item item = 1;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  const ::proto::DriveList_Item& item(int index) const;
  ::proto::DriveList_Item* mutable_item(int index);
  ::proto::DriveList_Item* add_item();
  ::google::protobuf::RepeatedPtrField< ::proto::DriveList_Item >*
      mutable_item();
  const ::google::protobuf::RepeatedPtrField< ::proto::DriveList_Item >&
      item() const;

  // @@protoc_insertion_point(class_scope:proto.DriveList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::DriveList_Item > item_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DriveListRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.DriveListRequest) */ {
 public:
  DriveListRequest();
  virtual ~DriveListRequest();

  DriveListRequest(const DriveListRequest& from);

  inline DriveListRequest& operator=(const DriveListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const DriveListRequest& default_instance();

  static inline const DriveListRequest* internal_default_instance() {
    return reinterpret_cast<const DriveListRequest*>(
               &_DriveListRequest_default_instance_);
  }

  void Swap(DriveListRequest* other);

  // implements Message ----------------------------------------------

  inline DriveListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DriveListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DriveListRequest& from);
  void MergeFrom(const DriveListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DriveListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 dummy = 1;
  void clear_dummy();
  static const int kDummyFieldNumber = 1;
  ::google::protobuf::uint32 dummy() const;
  void set_dummy(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DriveListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint32 dummy_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileList_Item : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.FileList.Item) */ {
 public:
  FileList_Item();
  virtual ~FileList_Item();

  FileList_Item(const FileList_Item& from);

  inline FileList_Item& operator=(const FileList_Item& from) {
    CopyFrom(from);
    return *this;
  }

  static const FileList_Item& default_instance();

  static inline const FileList_Item* internal_default_instance() {
    return reinterpret_cast<const FileList_Item*>(
               &_FileList_Item_default_instance_);
  }

  void Swap(FileList_Item* other);

  // implements Message ----------------------------------------------

  inline FileList_Item* New() const PROTOBUF_FINAL { return New(NULL); }

  FileList_Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FileList_Item& from);
  void MergeFrom(const FileList_Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FileList_Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // int64 modification_time = 3;
  void clear_modification_time();
  static const int kModificationTimeFieldNumber = 3;
  ::google::protobuf::int64 modification_time() const;
  void set_modification_time(::google::protobuf::int64 value);

  // bool is_directory = 4;
  void clear_is_directory();
  static const int kIsDirectoryFieldNumber = 4;
  bool is_directory() const;
  void set_is_directory(bool value);

  // @@protoc_insertion_point(class_scope:proto.FileList.Item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 size_;
  ::google::protobuf::int64 modification_time_;
  bool is_directory_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileList : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.FileList) */ {
 public:
  FileList();
  virtual ~FileList();

  FileList(const FileList& from);

  inline FileList& operator=(const FileList& from) {
    CopyFrom(from);
    return *this;
  }

  static const FileList& default_instance();

  static inline const FileList* internal_default_instance() {
    return reinterpret_cast<const FileList*>(
               &_FileList_default_instance_);
  }

  void Swap(FileList* other);

  // implements Message ----------------------------------------------

  inline FileList* New() const PROTOBUF_FINAL { return New(NULL); }

  FileList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FileList& from);
  void MergeFrom(const FileList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FileList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FileList_Item Item;

  // accessors -------------------------------------------------------

  // repeated .proto.FileList.Item item = 1;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  const ::proto::FileList_Item& item(int index) const;
  ::proto::FileList_Item* mutable_item(int index);
  ::proto::FileList_Item* add_item();
  ::google::protobuf::RepeatedPtrField< ::proto::FileList_Item >*
      mutable_item();
  const ::google::protobuf::RepeatedPtrField< ::proto::FileList_Item >&
      item() const;

  // @@protoc_insertion_point(class_scope:proto.FileList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::FileList_Item > item_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileListRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.FileListRequest) */ {
 public:
  FileListRequest();
  virtual ~FileListRequest();

  FileListRequest(const FileListRequest& from);

  inline FileListRequest& operator=(const FileListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const FileListRequest& default_instance();

  static inline const FileListRequest* internal_default_instance() {
    return reinterpret_cast<const FileListRequest*>(
               &_FileListRequest_default_instance_);
  }

  void Swap(FileListRequest* other);

  // implements Message ----------------------------------------------

  inline FileListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  FileListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FileListRequest& from);
  void MergeFrom(const FileListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FileListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:proto.FileListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UploadRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.UploadRequest) */ {
 public:
  UploadRequest();
  virtual ~UploadRequest();

  UploadRequest(const UploadRequest& from);

  inline UploadRequest& operator=(const UploadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const UploadRequest& default_instance();

  static inline const UploadRequest* internal_default_instance() {
    return reinterpret_cast<const UploadRequest*>(
               &_UploadRequest_default_instance_);
  }

  void Swap(UploadRequest* other);

  // implements Message ----------------------------------------------

  inline UploadRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UploadRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const UploadRequest& from);
  void MergeFrom(const UploadRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UploadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // bool overwrite = 2;
  void clear_overwrite();
  static const int kOverwriteFieldNumber = 2;
  bool overwrite() const;
  void set_overwrite(bool value);

  // @@protoc_insertion_point(class_scope:proto.UploadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  bool overwrite_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DownloadRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.DownloadRequest) */ {
 public:
  DownloadRequest();
  virtual ~DownloadRequest();

  DownloadRequest(const DownloadRequest& from);

  inline DownloadRequest& operator=(const DownloadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const DownloadRequest& default_instance();

  static inline const DownloadRequest* internal_default_instance() {
    return reinterpret_cast<const DownloadRequest*>(
               &_DownloadRequest_default_instance_);
  }

  void Swap(DownloadRequest* other);

  // implements Message ----------------------------------------------

  inline DownloadRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DownloadRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DownloadRequest& from);
  void MergeFrom(const DownloadRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DownloadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:proto.DownloadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FilePacketRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.FilePacketRequest) */ {
 public:
  FilePacketRequest();
  virtual ~FilePacketRequest();

  FilePacketRequest(const FilePacketRequest& from);

  inline FilePacketRequest& operator=(const FilePacketRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const FilePacketRequest& default_instance();

  static inline const FilePacketRequest* internal_default_instance() {
    return reinterpret_cast<const FilePacketRequest*>(
               &_FilePacketRequest_default_instance_);
  }

  void Swap(FilePacketRequest* other);

  // implements Message ----------------------------------------------

  inline FilePacketRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  FilePacketRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FilePacketRequest& from);
  void MergeFrom(const FilePacketRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FilePacketRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FilePacketRequest_Flags Flags;
  static const Flags NO_FLAGS =
    FilePacketRequest_Flags_NO_FLAGS;
  static const Flags CANCEL =
    FilePacketRequest_Flags_CANCEL;
  static inline bool Flags_IsValid(int value) {
    return FilePacketRequest_Flags_IsValid(value);
  }
  static const Flags Flags_MIN =
    FilePacketRequest_Flags_Flags_MIN;
  static const Flags Flags_MAX =
    FilePacketRequest_Flags_Flags_MAX;
  static const int Flags_ARRAYSIZE =
    FilePacketRequest_Flags_Flags_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // uint32 flags = 1;
  void clear_flags();
  static const int kFlagsFieldNumber = 1;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FilePacketRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint32 flags_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FilePacket : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.FilePacket) */ {
 public:
  FilePacket();
  virtual ~FilePacket();

  FilePacket(const FilePacket& from);

  inline FilePacket& operator=(const FilePacket& from) {
    CopyFrom(from);
    return *this;
  }

  static const FilePacket& default_instance();

  static inline const FilePacket* internal_default_instance() {
    return reinterpret_cast<const FilePacket*>(
               &_FilePacket_default_instance_);
  }

  void Swap(FilePacket* other);

  // implements Message ----------------------------------------------

  inline FilePacket* New() const PROTOBUF_FINAL { return New(NULL); }

  FilePacket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FilePacket& from);
  void MergeFrom(const FilePacket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FilePacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FilePacket_Flags Flags;
  static const Flags NO_FLAGS =
    FilePacket_Flags_NO_FLAGS;
  static const Flags FIRST_PACKET =
    FilePacket_Flags_FIRST_PACKET;
  static const Flags LAST_PACKET =
    FilePacket_Flags_LAST_PACKET;
  static inline bool Flags_IsValid(int value) {
    return FilePacket_Flags_IsValid(value);
  }
  static const Flags Flags_MIN =
    FilePacket_Flags_Flags_MIN;
  static const Flags Flags_MAX =
    FilePacket_Flags_Flags_MAX;
  static const int Flags_ARRAYSIZE =
    FilePacket_Flags_Flags_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // bytes data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // uint64 file_size = 2;
  void clear_file_size();
  static const int kFileSizeFieldNumber = 2;
  ::google::protobuf::uint64 file_size() const;
  void set_file_size(::google::protobuf::uint64 value);

  // uint32 flags = 1;
  void clear_flags();
  static const int kFlagsFieldNumber = 1;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FilePacket)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint64 file_size_;
  ::google::protobuf::uint32 flags_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateDirectoryRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.CreateDirectoryRequest) */ {
 public:
  CreateDirectoryRequest();
  virtual ~CreateDirectoryRequest();

  CreateDirectoryRequest(const CreateDirectoryRequest& from);

  inline CreateDirectoryRequest& operator=(const CreateDirectoryRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const CreateDirectoryRequest& default_instance();

  static inline const CreateDirectoryRequest* internal_default_instance() {
    return reinterpret_cast<const CreateDirectoryRequest*>(
               &_CreateDirectoryRequest_default_instance_);
  }

  void Swap(CreateDirectoryRequest* other);

  // implements Message ----------------------------------------------

  inline CreateDirectoryRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateDirectoryRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const CreateDirectoryRequest& from);
  void MergeFrom(const CreateDirectoryRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateDirectoryRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:proto.CreateDirectoryRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RenameRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.RenameRequest) */ {
 public:
  RenameRequest();
  virtual ~RenameRequest();

  RenameRequest(const RenameRequest& from);

  inline RenameRequest& operator=(const RenameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const RenameRequest& default_instance();

  static inline const RenameRequest* internal_default_instance() {
    return reinterpret_cast<const RenameRequest*>(
               &_RenameRequest_default_instance_);
  }

  void Swap(RenameRequest* other);

  // implements Message ----------------------------------------------

  inline RenameRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RenameRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RenameRequest& from);
  void MergeFrom(const RenameRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RenameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string old_name = 1;
  void clear_old_name();
  static const int kOldNameFieldNumber = 1;
  const ::std::string& old_name() const;
  void set_old_name(const ::std::string& value);
  #if LANG_CXX11
  void set_old_name(::std::string&& value);
  #endif
  void set_old_name(const char* value);
  void set_old_name(const char* value, size_t size);
  ::std::string* mutable_old_name();
  ::std::string* release_old_name();
  void set_allocated_old_name(::std::string* old_name);

  // string new_name = 2;
  void clear_new_name();
  static const int kNewNameFieldNumber = 2;
  const ::std::string& new_name() const;
  void set_new_name(const ::std::string& value);
  #if LANG_CXX11
  void set_new_name(::std::string&& value);
  #endif
  void set_new_name(const char* value);
  void set_new_name(const char* value, size_t size);
  ::std::string* mutable_new_name();
  ::std::string* release_new_name();
  void set_allocated_new_name(::std::string* new_name);

  // @@protoc_insertion_point(class_scope:proto.RenameRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr old_name_;
  ::google::protobuf::internal::ArenaStringPtr new_name_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.RemoveRequest) */ {
 public:
  RemoveRequest();
  virtual ~RemoveRequest();

  RemoveRequest(const RemoveRequest& from);

  inline RemoveRequest& operator=(const RemoveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const RemoveRequest& default_instance();

  static inline const RemoveRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveRequest*>(
               &_RemoveRequest_default_instance_);
  }

  void Swap(RemoveRequest* other);

  // implements Message ----------------------------------------------

  inline RemoveRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RemoveRequest& from);
  void MergeFrom(const RemoveRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RemoveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:proto.RemoveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileReply : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.FileReply) */ {
 public:
  FileReply();
  virtual ~FileReply();

  FileReply(const FileReply& from);

  inline FileReply& operator=(const FileReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const FileReply& default_instance();

  static inline const FileReply* internal_default_instance() {
    return reinterpret_cast<const FileReply*>(
               &_FileReply_default_instance_);
  }

  void Swap(FileReply* other);

  // implements Message ----------------------------------------------

  inline FileReply* New() const PROTOBUF_FINAL { return New(NULL); }

  FileReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FileReply& from);
  void MergeFrom(const FileReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FileReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.DriveList drive_list = 2;
  bool has_drive_list() const;
  void clear_drive_list();
  static const int kDriveListFieldNumber = 2;
  const ::proto::DriveList& drive_list() const;
  ::proto::DriveList* mutable_drive_list();
  ::proto::DriveList* release_drive_list();
  void set_allocated_drive_list(::proto::DriveList* drive_list);

  // .proto.FileList file_list = 3;
  bool has_file_list() const;
  void clear_file_list();
  static const int kFileListFieldNumber = 3;
  const ::proto::FileList& file_list() const;
  ::proto::FileList* mutable_file_list();
  ::proto::FileList* release_file_list();
  void set_allocated_file_list(::proto::FileList* file_list);

  // .proto.FilePacket packet = 4;
  bool has_packet() const;
  void clear_packet();
  static const int kPacketFieldNumber = 4;
  const ::proto::FilePacket& packet() const;
  ::proto::FilePacket* mutable_packet();
  ::proto::FilePacket* release_packet();
  void set_allocated_packet(::proto::FilePacket* packet);

  // .proto.FileError error_code = 1;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::proto::FileError error_code() const;
  void set_error_code(::proto::FileError value);

  // @@protoc_insertion_point(class_scope:proto.FileReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::proto::DriveList* drive_list_;
  ::proto::FileList* file_list_;
  ::proto::FilePacket* packet_;
  int error_code_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:proto.FileRequest) */ {
 public:
  FileRequest();
  virtual ~FileRequest();

  FileRequest(const FileRequest& from);

  inline FileRequest& operator=(const FileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const FileRequest& default_instance();

  static inline const FileRequest* internal_default_instance() {
    return reinterpret_cast<const FileRequest*>(
               &_FileRequest_default_instance_);
  }

  void Swap(FileRequest* other);

  // implements Message ----------------------------------------------

  inline FileRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  FileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FileRequest& from);
  void MergeFrom(const FileRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.DriveListRequest drive_list_request = 1;
  bool has_drive_list_request() const;
  void clear_drive_list_request();
  static const int kDriveListRequestFieldNumber = 1;
  const ::proto::DriveListRequest& drive_list_request() const;
  ::proto::DriveListRequest* mutable_drive_list_request();
  ::proto::DriveListRequest* release_drive_list_request();
  void set_allocated_drive_list_request(::proto::DriveListRequest* drive_list_request);

  // .proto.FileListRequest file_list_request = 2;
  bool has_file_list_request() const;
  void clear_file_list_request();
  static const int kFileListRequestFieldNumber = 2;
  const ::proto::FileListRequest& file_list_request() const;
  ::proto::FileListRequest* mutable_file_list_request();
  ::proto::FileListRequest* release_file_list_request();
  void set_allocated_file_list_request(::proto::FileListRequest* file_list_request);

  // .proto.CreateDirectoryRequest create_directory_request = 3;
  bool has_create_directory_request() const;
  void clear_create_directory_request();
  static const int kCreateDirectoryRequestFieldNumber = 3;
  const ::proto::CreateDirectoryRequest& create_directory_request() const;
  ::proto::CreateDirectoryRequest* mutable_create_directory_request();
  ::proto::CreateDirectoryRequest* release_create_directory_request();
  void set_allocated_create_directory_request(::proto::CreateDirectoryRequest* create_directory_request);

  // .proto.RenameRequest rename_request = 4;
  bool has_rename_request() const;
  void clear_rename_request();
  static const int kRenameRequestFieldNumber = 4;
  const ::proto::RenameRequest& rename_request() const;
  ::proto::RenameRequest* mutable_rename_request();
  ::proto::RenameRequest* release_rename_request();
  void set_allocated_rename_request(::proto::RenameRequest* rename_request);

  // .proto.RemoveRequest remove_request = 5;
  bool has_remove_request() const;
  void clear_remove_request();
  static const int kRemoveRequestFieldNumber = 5;
  const ::proto::RemoveRequest& remove_request() const;
  ::proto::RemoveRequest* mutable_remove_request();
  ::proto::RemoveRequest* release_remove_request();
  void set_allocated_remove_request(::proto::RemoveRequest* remove_request);

  // .proto.DownloadRequest download_request = 6;
  bool has_download_request() const;
  void clear_download_request();
  static const int kDownloadRequestFieldNumber = 6;
  const ::proto::DownloadRequest& download_request() const;
  ::proto::DownloadRequest* mutable_download_request();
  ::proto::DownloadRequest* release_download_request();
  void set_allocated_download_request(::proto::DownloadRequest* download_request);

  // .proto.UploadRequest upload_request = 7;
  bool has_upload_request() const;
  void clear_upload_request();
  static const int kUploadRequestFieldNumber = 7;
  const ::proto::UploadRequest& upload_request() const;
  ::proto::UploadRequest* mutable_upload_request();
  ::proto::UploadRequest* release_upload_request();
  void set_allocated_upload_request(::proto::UploadRequest* upload_request);

  // .proto.FilePacketRequest packet_request = 8;
  bool has_packet_request() const;
  void clear_packet_request();
  static const int kPacketRequestFieldNumber = 8;
  const ::proto::FilePacketRequest& packet_request() const;
  ::proto::FilePacketRequest* mutable_packet_request();
  ::proto::FilePacketRequest* release_packet_request();
  void set_allocated_packet_request(::proto::FilePacketRequest* packet_request);

  // .proto.FilePacket packet = 9;
  bool has_packet() const;
  void clear_packet();
  static const int kPacketFieldNumber = 9;
  const ::proto::FilePacket& packet() const;
  ::proto::FilePacket* mutable_packet();
  ::proto::FilePacket* release_packet();
  void set_allocated_packet(::proto::FilePacket* packet);

  // @@protoc_insertion_point(class_scope:proto.FileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::proto::DriveListRequest* drive_list_request_;
  ::proto::FileListRequest* file_list_request_;
  ::proto::CreateDirectoryRequest* create_directory_request_;
  ::proto::RenameRequest* rename_request_;
  ::proto::RemoveRequest* remove_request_;
  ::proto::DownloadRequest* download_request_;
  ::proto::UploadRequest* upload_request_;
  ::proto::FilePacketRequest* packet_request_;
  ::proto::FilePacket* packet_;
  mutable int _cached_size_;
  friend struct  protobuf_file_5ftransfer_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DriveList_Item

// .proto.DriveList.Item.Type type = 1;
inline void DriveList_Item::clear_type() {
  type_ = 0;
}
inline ::proto::DriveList_Item_Type DriveList_Item::type() const {
  // @@protoc_insertion_point(field_get:proto.DriveList.Item.type)
  return static_cast< ::proto::DriveList_Item_Type >(type_);
}
inline void DriveList_Item::set_type(::proto::DriveList_Item_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.DriveList.Item.type)
}

// string path = 2;
inline void DriveList_Item::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DriveList_Item::path() const {
  // @@protoc_insertion_point(field_get:proto.DriveList.Item.path)
  return path_.GetNoArena();
}
inline void DriveList_Item::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DriveList.Item.path)
}
#if LANG_CXX11
inline void DriveList_Item::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DriveList.Item.path)
}
#endif
inline void DriveList_Item::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DriveList.Item.path)
}
inline void DriveList_Item::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DriveList.Item.path)
}
inline ::std::string* DriveList_Item::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:proto.DriveList.Item.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DriveList_Item::release_path() {
  // @@protoc_insertion_point(field_release:proto.DriveList.Item.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DriveList_Item::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:proto.DriveList.Item.path)
}

// string name = 3;
inline void DriveList_Item::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DriveList_Item::name() const {
  // @@protoc_insertion_point(field_get:proto.DriveList.Item.name)
  return name_.GetNoArena();
}
inline void DriveList_Item::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DriveList.Item.name)
}
#if LANG_CXX11
inline void DriveList_Item::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DriveList.Item.name)
}
#endif
inline void DriveList_Item::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DriveList.Item.name)
}
inline void DriveList_Item::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DriveList.Item.name)
}
inline ::std::string* DriveList_Item::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.DriveList.Item.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DriveList_Item::release_name() {
  // @@protoc_insertion_point(field_release:proto.DriveList.Item.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DriveList_Item::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.DriveList.Item.name)
}

// int64 total_space = 4;
inline void DriveList_Item::clear_total_space() {
  total_space_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DriveList_Item::total_space() const {
  // @@protoc_insertion_point(field_get:proto.DriveList.Item.total_space)
  return total_space_;
}
inline void DriveList_Item::set_total_space(::google::protobuf::int64 value) {
  
  total_space_ = value;
  // @@protoc_insertion_point(field_set:proto.DriveList.Item.total_space)
}

// int64 free_space = 5;
inline void DriveList_Item::clear_free_space() {
  free_space_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DriveList_Item::free_space() const {
  // @@protoc_insertion_point(field_get:proto.DriveList.Item.free_space)
  return free_space_;
}
inline void DriveList_Item::set_free_space(::google::protobuf::int64 value) {
  
  free_space_ = value;
  // @@protoc_insertion_point(field_set:proto.DriveList.Item.free_space)
}

// -------------------------------------------------------------------

// DriveList

// repeated .proto.DriveList.Item item = 1;
inline int DriveList::item_size() const {
  return item_.size();
}
inline void DriveList::clear_item() {
  item_.Clear();
}
inline const ::proto::DriveList_Item& DriveList::item(int index) const {
  // @@protoc_insertion_point(field_get:proto.DriveList.item)
  return item_.Get(index);
}
inline ::proto::DriveList_Item* DriveList::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DriveList.item)
  return item_.Mutable(index);
}
inline ::proto::DriveList_Item* DriveList::add_item() {
  // @@protoc_insertion_point(field_add:proto.DriveList.item)
  return item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::DriveList_Item >*
DriveList::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:proto.DriveList.item)
  return &item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::DriveList_Item >&
DriveList::item() const {
  // @@protoc_insertion_point(field_list:proto.DriveList.item)
  return item_;
}

// -------------------------------------------------------------------

// DriveListRequest

// uint32 dummy = 1;
inline void DriveListRequest::clear_dummy() {
  dummy_ = 0u;
}
inline ::google::protobuf::uint32 DriveListRequest::dummy() const {
  // @@protoc_insertion_point(field_get:proto.DriveListRequest.dummy)
  return dummy_;
}
inline void DriveListRequest::set_dummy(::google::protobuf::uint32 value) {
  
  dummy_ = value;
  // @@protoc_insertion_point(field_set:proto.DriveListRequest.dummy)
}

// -------------------------------------------------------------------

// FileList_Item

// string name = 1;
inline void FileList_Item::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileList_Item::name() const {
  // @@protoc_insertion_point(field_get:proto.FileList.Item.name)
  return name_.GetNoArena();
}
inline void FileList_Item::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FileList.Item.name)
}
#if LANG_CXX11
inline void FileList_Item::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FileList.Item.name)
}
#endif
inline void FileList_Item::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FileList.Item.name)
}
inline void FileList_Item::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FileList.Item.name)
}
inline ::std::string* FileList_Item::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.FileList.Item.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileList_Item::release_name() {
  // @@protoc_insertion_point(field_release:proto.FileList.Item.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileList_Item::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.FileList.Item.name)
}

// uint64 size = 2;
inline void FileList_Item::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileList_Item::size() const {
  // @@protoc_insertion_point(field_get:proto.FileList.Item.size)
  return size_;
}
inline void FileList_Item::set_size(::google::protobuf::uint64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:proto.FileList.Item.size)
}

// int64 modification_time = 3;
inline void FileList_Item::clear_modification_time() {
  modification_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 FileList_Item::modification_time() const {
  // @@protoc_insertion_point(field_get:proto.FileList.Item.modification_time)
  return modification_time_;
}
inline void FileList_Item::set_modification_time(::google::protobuf::int64 value) {
  
  modification_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FileList.Item.modification_time)
}

// bool is_directory = 4;
inline void FileList_Item::clear_is_directory() {
  is_directory_ = false;
}
inline bool FileList_Item::is_directory() const {
  // @@protoc_insertion_point(field_get:proto.FileList.Item.is_directory)
  return is_directory_;
}
inline void FileList_Item::set_is_directory(bool value) {
  
  is_directory_ = value;
  // @@protoc_insertion_point(field_set:proto.FileList.Item.is_directory)
}

// -------------------------------------------------------------------

// FileList

// repeated .proto.FileList.Item item = 1;
inline int FileList::item_size() const {
  return item_.size();
}
inline void FileList::clear_item() {
  item_.Clear();
}
inline const ::proto::FileList_Item& FileList::item(int index) const {
  // @@protoc_insertion_point(field_get:proto.FileList.item)
  return item_.Get(index);
}
inline ::proto::FileList_Item* FileList::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:proto.FileList.item)
  return item_.Mutable(index);
}
inline ::proto::FileList_Item* FileList::add_item() {
  // @@protoc_insertion_point(field_add:proto.FileList.item)
  return item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FileList_Item >*
FileList::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:proto.FileList.item)
  return &item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FileList_Item >&
FileList::item() const {
  // @@protoc_insertion_point(field_list:proto.FileList.item)
  return item_;
}

// -------------------------------------------------------------------

// FileListRequest

// string path = 1;
inline void FileListRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileListRequest::path() const {
  // @@protoc_insertion_point(field_get:proto.FileListRequest.path)
  return path_.GetNoArena();
}
inline void FileListRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FileListRequest.path)
}
#if LANG_CXX11
inline void FileListRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FileListRequest.path)
}
#endif
inline void FileListRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FileListRequest.path)
}
inline void FileListRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FileListRequest.path)
}
inline ::std::string* FileListRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:proto.FileListRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileListRequest::release_path() {
  // @@protoc_insertion_point(field_release:proto.FileListRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileListRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:proto.FileListRequest.path)
}

// -------------------------------------------------------------------

// UploadRequest

// string path = 1;
inline void UploadRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UploadRequest::path() const {
  // @@protoc_insertion_point(field_get:proto.UploadRequest.path)
  return path_.GetNoArena();
}
inline void UploadRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.UploadRequest.path)
}
#if LANG_CXX11
inline void UploadRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.UploadRequest.path)
}
#endif
inline void UploadRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.UploadRequest.path)
}
inline void UploadRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.UploadRequest.path)
}
inline ::std::string* UploadRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:proto.UploadRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadRequest::release_path() {
  // @@protoc_insertion_point(field_release:proto.UploadRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:proto.UploadRequest.path)
}

// bool overwrite = 2;
inline void UploadRequest::clear_overwrite() {
  overwrite_ = false;
}
inline bool UploadRequest::overwrite() const {
  // @@protoc_insertion_point(field_get:proto.UploadRequest.overwrite)
  return overwrite_;
}
inline void UploadRequest::set_overwrite(bool value) {
  
  overwrite_ = value;
  // @@protoc_insertion_point(field_set:proto.UploadRequest.overwrite)
}

// -------------------------------------------------------------------

// DownloadRequest

// string path = 1;
inline void DownloadRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DownloadRequest::path() const {
  // @@protoc_insertion_point(field_get:proto.DownloadRequest.path)
  return path_.GetNoArena();
}
inline void DownloadRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DownloadRequest.path)
}
#if LANG_CXX11
inline void DownloadRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DownloadRequest.path)
}
#endif
inline void DownloadRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DownloadRequest.path)
}
inline void DownloadRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DownloadRequest.path)
}
inline ::std::string* DownloadRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:proto.DownloadRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadRequest::release_path() {
  // @@protoc_insertion_point(field_release:proto.DownloadRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:proto.DownloadRequest.path)
}

// -------------------------------------------------------------------

// FilePacketRequest

// uint32 flags = 1;
inline void FilePacketRequest::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 FilePacketRequest::flags() const {
  // @@protoc_insertion_point(field_get:proto.FilePacketRequest.flags)
  return flags_;
}
inline void FilePacketRequest::set_flags(::google::protobuf::uint32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:proto.FilePacketRequest.flags)
}

// -------------------------------------------------------------------

// FilePacket

// uint32 flags = 1;
inline void FilePacket::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 FilePacket::flags() const {
  // @@protoc_insertion_point(field_get:proto.FilePacket.flags)
  return flags_;
}
inline void FilePacket::set_flags(::google::protobuf::uint32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:proto.FilePacket.flags)
}

// uint64 file_size = 2;
inline void FilePacket::clear_file_size() {
  file_size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FilePacket::file_size() const {
  // @@protoc_insertion_point(field_get:proto.FilePacket.file_size)
  return file_size_;
}
inline void FilePacket::set_file_size(::google::protobuf::uint64 value) {
  
  file_size_ = value;
  // @@protoc_insertion_point(field_set:proto.FilePacket.file_size)
}

// bytes data = 3;
inline void FilePacket::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FilePacket::data() const {
  // @@protoc_insertion_point(field_get:proto.FilePacket.data)
  return data_.GetNoArena();
}
inline void FilePacket::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FilePacket.data)
}
#if LANG_CXX11
inline void FilePacket::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FilePacket.data)
}
#endif
inline void FilePacket::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FilePacket.data)
}
inline void FilePacket::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FilePacket.data)
}
inline ::std::string* FilePacket::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.FilePacket.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FilePacket::release_data() {
  // @@protoc_insertion_point(field_release:proto.FilePacket.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FilePacket::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.FilePacket.data)
}

// -------------------------------------------------------------------

// CreateDirectoryRequest

// string path = 1;
inline void CreateDirectoryRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateDirectoryRequest::path() const {
  // @@protoc_insertion_point(field_get:proto.CreateDirectoryRequest.path)
  return path_.GetNoArena();
}
inline void CreateDirectoryRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CreateDirectoryRequest.path)
}
#if LANG_CXX11
inline void CreateDirectoryRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CreateDirectoryRequest.path)
}
#endif
inline void CreateDirectoryRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CreateDirectoryRequest.path)
}
inline void CreateDirectoryRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CreateDirectoryRequest.path)
}
inline ::std::string* CreateDirectoryRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:proto.CreateDirectoryRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateDirectoryRequest::release_path() {
  // @@protoc_insertion_point(field_release:proto.CreateDirectoryRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateDirectoryRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:proto.CreateDirectoryRequest.path)
}

// -------------------------------------------------------------------

// RenameRequest

// string old_name = 1;
inline void RenameRequest::clear_old_name() {
  old_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameRequest::old_name() const {
  // @@protoc_insertion_point(field_get:proto.RenameRequest.old_name)
  return old_name_.GetNoArena();
}
inline void RenameRequest::set_old_name(const ::std::string& value) {
  
  old_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RenameRequest.old_name)
}
#if LANG_CXX11
inline void RenameRequest::set_old_name(::std::string&& value) {
  
  old_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RenameRequest.old_name)
}
#endif
inline void RenameRequest::set_old_name(const char* value) {
  
  old_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RenameRequest.old_name)
}
inline void RenameRequest::set_old_name(const char* value, size_t size) {
  
  old_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RenameRequest.old_name)
}
inline ::std::string* RenameRequest::mutable_old_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.RenameRequest.old_name)
  return old_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameRequest::release_old_name() {
  // @@protoc_insertion_point(field_release:proto.RenameRequest.old_name)
  
  return old_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_allocated_old_name(::std::string* old_name) {
  if (old_name != NULL) {
    
  } else {
    
  }
  old_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), old_name);
  // @@protoc_insertion_point(field_set_allocated:proto.RenameRequest.old_name)
}

// string new_name = 2;
inline void RenameRequest::clear_new_name() {
  new_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameRequest::new_name() const {
  // @@protoc_insertion_point(field_get:proto.RenameRequest.new_name)
  return new_name_.GetNoArena();
}
inline void RenameRequest::set_new_name(const ::std::string& value) {
  
  new_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RenameRequest.new_name)
}
#if LANG_CXX11
inline void RenameRequest::set_new_name(::std::string&& value) {
  
  new_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RenameRequest.new_name)
}
#endif
inline void RenameRequest::set_new_name(const char* value) {
  
  new_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RenameRequest.new_name)
}
inline void RenameRequest::set_new_name(const char* value, size_t size) {
  
  new_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RenameRequest.new_name)
}
inline ::std::string* RenameRequest::mutable_new_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.RenameRequest.new_name)
  return new_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameRequest::release_new_name() {
  // @@protoc_insertion_point(field_release:proto.RenameRequest.new_name)
  
  return new_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameRequest::set_allocated_new_name(::std::string* new_name) {
  if (new_name != NULL) {
    
  } else {
    
  }
  new_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_name);
  // @@protoc_insertion_point(field_set_allocated:proto.RenameRequest.new_name)
}

// -------------------------------------------------------------------

// RemoveRequest

// string path = 1;
inline void RemoveRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoveRequest::path() const {
  // @@protoc_insertion_point(field_get:proto.RemoveRequest.path)
  return path_.GetNoArena();
}
inline void RemoveRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RemoveRequest.path)
}
#if LANG_CXX11
inline void RemoveRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RemoveRequest.path)
}
#endif
inline void RemoveRequest::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RemoveRequest.path)
}
inline void RemoveRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RemoveRequest.path)
}
inline ::std::string* RemoveRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:proto.RemoveRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveRequest::release_path() {
  // @@protoc_insertion_point(field_release:proto.RemoveRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:proto.RemoveRequest.path)
}

// -------------------------------------------------------------------

// FileReply

// .proto.FileError error_code = 1;
inline void FileReply::clear_error_code() {
  error_code_ = 0;
}
inline ::proto::FileError FileReply::error_code() const {
  // @@protoc_insertion_point(field_get:proto.FileReply.error_code)
  return static_cast< ::proto::FileError >(error_code_);
}
inline void FileReply::set_error_code(::proto::FileError value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:proto.FileReply.error_code)
}

// .proto.DriveList drive_list = 2;
inline bool FileReply::has_drive_list() const {
  return this != internal_default_instance() && drive_list_ != NULL;
}
inline void FileReply::clear_drive_list() {
  if (GetArenaNoVirtual() == NULL && drive_list_ != NULL) delete drive_list_;
  drive_list_ = NULL;
}
inline const ::proto::DriveList& FileReply::drive_list() const {
  // @@protoc_insertion_point(field_get:proto.FileReply.drive_list)
  return drive_list_ != NULL ? *drive_list_
                         : *::proto::DriveList::internal_default_instance();
}
inline ::proto::DriveList* FileReply::mutable_drive_list() {
  
  if (drive_list_ == NULL) {
    drive_list_ = new ::proto::DriveList;
  }
  // @@protoc_insertion_point(field_mutable:proto.FileReply.drive_list)
  return drive_list_;
}
inline ::proto::DriveList* FileReply::release_drive_list() {
  // @@protoc_insertion_point(field_release:proto.FileReply.drive_list)
  
  ::proto::DriveList* temp = drive_list_;
  drive_list_ = NULL;
  return temp;
}
inline void FileReply::set_allocated_drive_list(::proto::DriveList* drive_list) {
  delete drive_list_;
  drive_list_ = drive_list;
  if (drive_list) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FileReply.drive_list)
}

// .proto.FileList file_list = 3;
inline bool FileReply::has_file_list() const {
  return this != internal_default_instance() && file_list_ != NULL;
}
inline void FileReply::clear_file_list() {
  if (GetArenaNoVirtual() == NULL && file_list_ != NULL) delete file_list_;
  file_list_ = NULL;
}
inline const ::proto::FileList& FileReply::file_list() const {
  // @@protoc_insertion_point(field_get:proto.FileReply.file_list)
  return file_list_ != NULL ? *file_list_
                         : *::proto::FileList::internal_default_instance();
}
inline ::proto::FileList* FileReply::mutable_file_list() {
  
  if (file_list_ == NULL) {
    file_list_ = new ::proto::FileList;
  }
  // @@protoc_insertion_point(field_mutable:proto.FileReply.file_list)
  return file_list_;
}
inline ::proto::FileList* FileReply::release_file_list() {
  // @@protoc_insertion_point(field_release:proto.FileReply.file_list)
  
  ::proto::FileList* temp = file_list_;
  file_list_ = NULL;
  return temp;
}
inline void FileReply::set_allocated_file_list(::proto::FileList* file_list) {
  delete file_list_;
  file_list_ = file_list;
  if (file_list) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FileReply.file_list)
}

// .proto.FilePacket packet = 4;
inline bool FileReply::has_packet() const {
  return this != internal_default_instance() && packet_ != NULL;
}
inline void FileReply::clear_packet() {
  if (GetArenaNoVirtual() == NULL && packet_ != NULL) delete packet_;
  packet_ = NULL;
}
inline const ::proto::FilePacket& FileReply::packet() const {
  // @@protoc_insertion_point(field_get:proto.FileReply.packet)
  return packet_ != NULL ? *packet_
                         : *::proto::FilePacket::internal_default_instance();
}
inline ::proto::FilePacket* FileReply::mutable_packet() {
  
  if (packet_ == NULL) {
    packet_ = new ::proto::FilePacket;
  }
  // @@protoc_insertion_point(field_mutable:proto.FileReply.packet)
  return packet_;
}
inline ::proto::FilePacket* FileReply::release_packet() {
  // @@protoc_insertion_point(field_release:proto.FileReply.packet)
  
  ::proto::FilePacket* temp = packet_;
  packet_ = NULL;
  return temp;
}
inline void FileReply::set_allocated_packet(::proto::FilePacket* packet) {
  delete packet_;
  packet_ = packet;
  if (packet) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FileReply.packet)
}

// -------------------------------------------------------------------

// FileRequest

// .proto.DriveListRequest drive_list_request = 1;
inline bool FileRequest::has_drive_list_request() const {
  return this != internal_default_instance() && drive_list_request_ != NULL;
}
inline void FileRequest::clear_drive_list_request() {
  if (GetArenaNoVirtual() == NULL && drive_list_request_ != NULL) delete drive_list_request_;
  drive_list_request_ = NULL;
}
inline const ::proto::DriveListRequest& FileRequest::drive_list_request() const {
  // @@protoc_insertion_point(field_get:proto.FileRequest.drive_list_request)
  return drive_list_request_ != NULL ? *drive_list_request_
                         : *::proto::DriveListRequest::internal_default_instance();
}
inline ::proto::DriveListRequest* FileRequest::mutable_drive_list_request() {
  
  if (drive_list_request_ == NULL) {
    drive_list_request_ = new ::proto::DriveListRequest;
  }
  // @@protoc_insertion_point(field_mutable:proto.FileRequest.drive_list_request)
  return drive_list_request_;
}
inline ::proto::DriveListRequest* FileRequest::release_drive_list_request() {
  // @@protoc_insertion_point(field_release:proto.FileRequest.drive_list_request)
  
  ::proto::DriveListRequest* temp = drive_list_request_;
  drive_list_request_ = NULL;
  return temp;
}
inline void FileRequest::set_allocated_drive_list_request(::proto::DriveListRequest* drive_list_request) {
  delete drive_list_request_;
  drive_list_request_ = drive_list_request;
  if (drive_list_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FileRequest.drive_list_request)
}

// .proto.FileListRequest file_list_request = 2;
inline bool FileRequest::has_file_list_request() const {
  return this != internal_default_instance() && file_list_request_ != NULL;
}
inline void FileRequest::clear_file_list_request() {
  if (GetArenaNoVirtual() == NULL && file_list_request_ != NULL) delete file_list_request_;
  file_list_request_ = NULL;
}
inline const ::proto::FileListRequest& FileRequest::file_list_request() const {
  // @@protoc_insertion_point(field_get:proto.FileRequest.file_list_request)
  return file_list_request_ != NULL ? *file_list_request_
                         : *::proto::FileListRequest::internal_default_instance();
}
inline ::proto::FileListRequest* FileRequest::mutable_file_list_request() {
  
  if (file_list_request_ == NULL) {
    file_list_request_ = new ::proto::FileListRequest;
  }
  // @@protoc_insertion_point(field_mutable:proto.FileRequest.file_list_request)
  return file_list_request_;
}
inline ::proto::FileListRequest* FileRequest::release_file_list_request() {
  // @@protoc_insertion_point(field_release:proto.FileRequest.file_list_request)
  
  ::proto::FileListRequest* temp = file_list_request_;
  file_list_request_ = NULL;
  return temp;
}
inline void FileRequest::set_allocated_file_list_request(::proto::FileListRequest* file_list_request) {
  delete file_list_request_;
  file_list_request_ = file_list_request;
  if (file_list_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FileRequest.file_list_request)
}

// .proto.CreateDirectoryRequest create_directory_request = 3;
inline bool FileRequest::has_create_directory_request() const {
  return this != internal_default_instance() && create_directory_request_ != NULL;
}
inline void FileRequest::clear_create_directory_request() {
  if (GetArenaNoVirtual() == NULL && create_directory_request_ != NULL) delete create_directory_request_;
  create_directory_request_ = NULL;
}
inline const ::proto::CreateDirectoryRequest& FileRequest::create_directory_request() const {
  // @@protoc_insertion_point(field_get:proto.FileRequest.create_directory_request)
  return create_directory_request_ != NULL ? *create_directory_request_
                         : *::proto::CreateDirectoryRequest::internal_default_instance();
}
inline ::proto::CreateDirectoryRequest* FileRequest::mutable_create_directory_request() {
  
  if (create_directory_request_ == NULL) {
    create_directory_request_ = new ::proto::CreateDirectoryRequest;
  }
  // @@protoc_insertion_point(field_mutable:proto.FileRequest.create_directory_request)
  return create_directory_request_;
}
inline ::proto::CreateDirectoryRequest* FileRequest::release_create_directory_request() {
  // @@protoc_insertion_point(field_release:proto.FileRequest.create_directory_request)
  
  ::proto::CreateDirectoryRequest* temp = create_directory_request_;
  create_directory_request_ = NULL;
  return temp;
}
inline void FileRequest::set_allocated_create_directory_request(::proto::CreateDirectoryRequest* create_directory_request) {
  delete create_directory_request_;
  create_directory_request_ = create_directory_request;
  if (create_directory_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FileRequest.create_directory_request)
}

// .proto.RenameRequest rename_request = 4;
inline bool FileRequest::has_rename_request() const {
  return this != internal_default_instance() && rename_request_ != NULL;
}
inline void FileRequest::clear_rename_request() {
  if (GetArenaNoVirtual() == NULL && rename_request_ != NULL) delete rename_request_;
  rename_request_ = NULL;
}
inline const ::proto::RenameRequest& FileRequest::rename_request() const {
  // @@protoc_insertion_point(field_get:proto.FileRequest.rename_request)
  return rename_request_ != NULL ? *rename_request_
                         : *::proto::RenameRequest::internal_default_instance();
}
inline ::proto::RenameRequest* FileRequest::mutable_rename_request() {
  
  if (rename_request_ == NULL) {
    rename_request_ = new ::proto::RenameRequest;
  }
  // @@protoc_insertion_point(field_mutable:proto.FileRequest.rename_request)
  return rename_request_;
}
inline ::proto::RenameRequest* FileRequest::release_rename_request() {
  // @@protoc_insertion_point(field_release:proto.FileRequest.rename_request)
  
  ::proto::RenameRequest* temp = rename_request_;
  rename_request_ = NULL;
  return temp;
}
inline void FileRequest::set_allocated_rename_request(::proto::RenameRequest* rename_request) {
  delete rename_request_;
  rename_request_ = rename_request;
  if (rename_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FileRequest.rename_request)
}

// .proto.RemoveRequest remove_request = 5;
inline bool FileRequest::has_remove_request() const {
  return this != internal_default_instance() && remove_request_ != NULL;
}
inline void FileRequest::clear_remove_request() {
  if (GetArenaNoVirtual() == NULL && remove_request_ != NULL) delete remove_request_;
  remove_request_ = NULL;
}
inline const ::proto::RemoveRequest& FileRequest::remove_request() const {
  // @@protoc_insertion_point(field_get:proto.FileRequest.remove_request)
  return remove_request_ != NULL ? *remove_request_
                         : *::proto::RemoveRequest::internal_default_instance();
}
inline ::proto::RemoveRequest* FileRequest::mutable_remove_request() {
  
  if (remove_request_ == NULL) {
    remove_request_ = new ::proto::RemoveRequest;
  }
  // @@protoc_insertion_point(field_mutable:proto.FileRequest.remove_request)
  return remove_request_;
}
inline ::proto::RemoveRequest* FileRequest::release_remove_request() {
  // @@protoc_insertion_point(field_release:proto.FileRequest.remove_request)
  
  ::proto::RemoveRequest* temp = remove_request_;
  remove_request_ = NULL;
  return temp;
}
inline void FileRequest::set_allocated_remove_request(::proto::RemoveRequest* remove_request) {
  delete remove_request_;
  remove_request_ = remove_request;
  if (remove_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FileRequest.remove_request)
}

// .proto.DownloadRequest download_request = 6;
inline bool FileRequest::has_download_request() const {
  return this != internal_default_instance() && download_request_ != NULL;
}
inline void FileRequest::clear_download_request() {
  if (GetArenaNoVirtual() == NULL && download_request_ != NULL) delete download_request_;
  download_request_ = NULL;
}
inline const ::proto::DownloadRequest& FileRequest::download_request() const {
  // @@protoc_insertion_point(field_get:proto.FileRequest.download_request)
  return download_request_ != NULL ? *download_request_
                         : *::proto::DownloadRequest::internal_default_instance();
}
inline ::proto::DownloadRequest* FileRequest::mutable_download_request() {
  
  if (download_request_ == NULL) {
    download_request_ = new ::proto::DownloadRequest;
  }
  // @@protoc_insertion_point(field_mutable:proto.FileRequest.download_request)
  return download_request_;
}
inline ::proto::DownloadRequest* FileRequest::release_download_request() {
  // @@protoc_insertion_point(field_release:proto.FileRequest.download_request)
  
  ::proto::DownloadRequest* temp = download_request_;
  download_request_ = NULL;
  return temp;
}
inline void FileRequest::set_allocated_download_request(::proto::DownloadRequest* download_request) {
  delete download_request_;
  download_request_ = download_request;
  if (download_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FileRequest.download_request)
}

// .proto.UploadRequest upload_request = 7;
inline bool FileRequest::has_upload_request() const {
  return this != internal_default_instance() && upload_request_ != NULL;
}
inline void FileRequest::clear_upload_request() {
  if (GetArenaNoVirtual() == NULL && upload_request_ != NULL) delete upload_request_;
  upload_request_ = NULL;
}
inline const ::proto::UploadRequest& FileRequest::upload_request() const {
  // @@protoc_insertion_point(field_get:proto.FileRequest.upload_request)
  return upload_request_ != NULL ? *upload_request_
                         : *::proto::UploadRequest::internal_default_instance();
}
inline ::proto::UploadRequest* FileRequest::mutable_upload_request() {
  
  if (upload_request_ == NULL) {
    upload_request_ = new ::proto::UploadRequest;
  }
  // @@protoc_insertion_point(field_mutable:proto.FileRequest.upload_request)
  return upload_request_;
}
inline ::proto::UploadRequest* FileRequest::release_upload_request() {
  // @@protoc_insertion_point(field_release:proto.FileRequest.upload_request)
  
  ::proto::UploadRequest* temp = upload_request_;
  upload_request_ = NULL;
  return temp;
}
inline void FileRequest::set_allocated_upload_request(::proto::UploadRequest* upload_request) {
  delete upload_request_;
  upload_request_ = upload_request;
  if (upload_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FileRequest.upload_request)
}

// .proto.FilePacketRequest packet_request = 8;
inline bool FileRequest::has_packet_request() const {
  return this != internal_default_instance() && packet_request_ != NULL;
}
inline void FileRequest::clear_packet_request() {
  if (GetArenaNoVirtual() == NULL && packet_request_ != NULL) delete packet_request_;
  packet_request_ = NULL;
}
inline const ::proto::FilePacketRequest& FileRequest::packet_request() const {
  // @@protoc_insertion_point(field_get:proto.FileRequest.packet_request)
  return packet_request_ != NULL ? *packet_request_
                         : *::proto::FilePacketRequest::internal_default_instance();
}
inline ::proto::FilePacketRequest* FileRequest::mutable_packet_request() {
  
  if (packet_request_ == NULL) {
    packet_request_ = new ::proto::FilePacketRequest;
  }
  // @@protoc_insertion_point(field_mutable:proto.FileRequest.packet_request)
  return packet_request_;
}
inline ::proto::FilePacketRequest* FileRequest::release_packet_request() {
  // @@protoc_insertion_point(field_release:proto.FileRequest.packet_request)
  
  ::proto::FilePacketRequest* temp = packet_request_;
  packet_request_ = NULL;
  return temp;
}
inline void FileRequest::set_allocated_packet_request(::proto::FilePacketRequest* packet_request) {
  delete packet_request_;
  packet_request_ = packet_request;
  if (packet_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FileRequest.packet_request)
}

// .proto.FilePacket packet = 9;
inline bool FileRequest::has_packet() const {
  return this != internal_default_instance() && packet_ != NULL;
}
inline void FileRequest::clear_packet() {
  if (GetArenaNoVirtual() == NULL && packet_ != NULL) delete packet_;
  packet_ = NULL;
}
inline const ::proto::FilePacket& FileRequest::packet() const {
  // @@protoc_insertion_point(field_get:proto.FileRequest.packet)
  return packet_ != NULL ? *packet_
                         : *::proto::FilePacket::internal_default_instance();
}
inline ::proto::FilePacket* FileRequest::mutable_packet() {
  
  if (packet_ == NULL) {
    packet_ = new ::proto::FilePacket;
  }
  // @@protoc_insertion_point(field_mutable:proto.FileRequest.packet)
  return packet_;
}
inline ::proto::FilePacket* FileRequest::release_packet() {
  // @@protoc_insertion_point(field_release:proto.FileRequest.packet)
  
  ::proto::FilePacket* temp = packet_;
  packet_ = NULL;
  return temp;
}
inline void FileRequest::set_allocated_packet(::proto::FilePacket* packet) {
  delete packet_;
  packet_ = packet;
  if (packet) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.FileRequest.packet)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::DriveList_Item_Type> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::proto::FilePacketRequest_Flags> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::proto::FilePacket_Flags> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::proto::FileError> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_file_5ftransfer_2eproto__INCLUDED
